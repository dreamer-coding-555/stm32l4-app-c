name: CI Pipeline

on:
  push:
    paths:
      - "**.c"
      - "**.h"
      - "**.cpp"
      - "**.hpp"
      - "**.py"
      - "**.build"
      - "**.m"
      - "**.mm"
  pull_request:
    paths:
      - "**.c"
      - "**.h"
      - "**.cpp"
      - "**.hpp"
      - "**.py"
      - "**.build"
      - "**.m"
      - "**.mm"

jobs:
  build:
    name: Running on ${{ matrix.os }} with Meson v${{ matrix.meson_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        meson_version: ["1.2.0", "1.3.0", "1.4.0"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Meson and Ninja
        run: |
          python -m pip install --upgrade pip
          python -m pip install meson==${{ matrix.meson_version }} ninja
      - name: Install QEMU and ARM GCC toolchain
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-system-arm gcc-arm-none-eabi
      - name: Install QEMU and ARM GCC toolchain
        if: matrix.os == 'macos-latest'
        run: |
          brew install qemu
          brew install qemu-arm
          brew install qemu-efi-aarch64
          brew install qemu-system-arm
      - name: Configure
        run: meson setup builddir --cross-file=data/stm32l475.cross
      - name: Compile
        run: meson compile -C builddir
      - name: Run Tests
        run: |
          # Assuming your QEMU command to run the tests
          # Adjust this command according to your project's requirements
          qemu-system-arm -machine stm32 -cpu cortex-m4 -kernel builddir/code/firmware.elf
      - name: Upload Test Log
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: ${{ matrix.os }}_meson_testlog
          path: builddir/meson-logs/testlog.txt
